import React, { Component, PropTypes } from 'react';const SUITS = { 'spades': "♠", 'hearts': "♥", 'diamonds': "♦", 'clubs': "♣"};const FACE_VALUES = ['', 'A','2','3','4','5','6','7','8','9','10','J','Q','K'];const MAX_CARDS = 52;class Deck extends Component {  constructor(){    super(...arguments);    this.state={      pickedCards:[]    }  }  getRandomCard(){    if(this.state.pickedCards.length === 52) return;    let rank = Math.ceil(Math.random() * 13);    let suit = Object.keys(SUITS)[Math.floor(Math.random() * 4)];    let id = rank+suit;    if(this.state.pickedCards.map((card)=>card.id).indexOf(id)===-1){      this.state.pickedCards.push({id,rank,suit});    } else {      this.getRandomCard();    }  }  componentWillMount(){    for (var i = 0; i < this.props.cards; i++) {      this.getRandomCard();    }  }  componentWillReceiveProps(newProps){    let newDrawCount = newProps.cards-this.state.pickedCards.length;    for (var i = 0; i < newDrawCount; i++) {      this.getRandomCard();    }  }  render(){    let cards = this.state.pickedCards.map((card) => <Card key={card.id} rank={card.rank} suit={card.suit} />)    return (      <div>        {cards}      </div>    )  }}class Card extends Component {  render(){    let card;    let rank = this.props.rank;    let suit = this.props.suit;    if(rank === undefined || suit === undefined){      card = <div className="card back" />    } else {      card = (        <div className={`card ${suit} v${rank}`}>          <span className="rank">{FACE_VALUES[rank]}</span>          <span className="suit">{SUITS[suit]}</span>        </div>      )    }    return (      <div>        {card}      </div>    )  }}Card.propTypes = {  rank: React.PropTypes.oneOf([1,2,3,4,5,6,7,8,9,10,11,12,13]),  suit: React.PropTypes.oneOf(['spades', 'hearts', 'diamonds', 'clubs']),}class App extends Component {  constructor(){    super(...arguments);    this.state={      userCount: 1    }  }  hitMe(){    this.setState({userCount: this.state.userCount + 1})  }  render(){    return (      <div>        <Card />        <Deck cards={this.state.userCount}/>        <button onClick={this.hitMe.bind(this)}>Hit Me</button>      </div>    );  }}React.render(<App />, document.getElementById('app'));